name: Android + Release
on: workflow_dispatch
jobs:
  Build:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: latest

      - name: Restore Previous Cache
        if: ${{ always() }}
        id: cache-debug-build-android-restore
        uses: actions/cache/restore@main
        with:
          path: |
            ~/.gradle
            export/release/android/haxe
            export/release/android/obj
          key: cache-android-build

      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib install hmm --quiet
          haxelib run hmm install --quiet

      - name: Configure Android
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
          haxelib run lime rebuild hxcpp

      - name: Compile
        run: haxelib run lime build android -final -D officialBuild
        env:
          cert_pass: nullfunni
          cert_alias_pass: nullfunni

      - name: Clear Previous Cache
        if: ${{ always() }}
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-android-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message);
            }

      - name: Save Current Cache
        if: ${{ always() }}
        id: cache-release-build-android-save
        uses: actions/cache/save@main
        with:
          path: |
            ~/.gradle
            export/release/android/haxe
            export/release/android/obj
          key: cache-android-build

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk
          if-no-files-found: error
  Releaser:
    needs: Build
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Download The Build
        uses: actions/download-artifact@main
        with:
           name: androidBuild
           path: /home/runner

# PER ORA NON PUBBLICARE IL FILE DI RILASCIO!
#      - name: Publish The Release
#        uses: marvinpinto/action-automatic-releases@latest
#        with:
#          repo_token: "${{ secrets.GITHUB_TOKEN }}"
#          prerelease: false
#          automatic_release_tag: "1.0.0"
#          title: "1.0.0 Android Release"
#          files: |
#            /home/runner/FluffyBestie-release.apk